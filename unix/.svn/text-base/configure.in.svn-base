dnl Process this file with autoconf to produce a configure script.
AC_INIT(../include/mk4.h)
AC_PREREQ(2.0)
AC_CONFIG_AUX_DIR(scripts)
AC_CONFIG_HEADER(config.h)
AC_LANG_CPLUSPLUS

VERSION=2.3.3
AC_SUBST(VERSION)

MK_TARGETS="core"
MK_INSTALL="install-mk"

AC_ARG_ENABLE(python, [  --enable-python         build the Mk4py extension for Python (default=no)],
    [python_ok=$enableval], [python_ok=no])
if test "$python_ok" != "no"; then
    MK_TARGETS="$MK_TARGETS python"
    MK_INSTALL="$MK_INSTALL install-python"
fi

AC_ARG_WITH(tcl, [  --with-tcl=DIR          directory containing Tcl configuration (tclConfig.sh)], with_tclconfig=${withval})
    AC_MSG_CHECKING([for Tcl configuration])
    AC_CACHE_VAL(ac_cv_c_tclconfig,[

    # First check to see if --with-tcl was specified.
    if test x"${with_tclconfig}" != x ; then
        if test -f "${with_tclconfig}/tclConfig.sh" ; then
            ac_cv_c_tclconfig=`(cd ${with_tclconfig}; pwd)`
        else
            AC_MSG_ERROR([${with_tclconfig} directory doesn't contain tclConfig.sh])
        fi
    fi

    # then check for a private Tcl installation
    if test x"${ac_cv_c_tclconfig}" = x ; then
        for i in \
            ../tcl \
            `ls -dr ../tcl[[8-9]].[[0-9]]* 2>/dev/null` \
            ../../tcl \
            `ls -dr ../../tcl[[8-9]].[[0-9]]* 2>/dev/null` \
            ../../../tcl \
            `ls -dr ../../../tcl[[8-9]].[[0-9]]* 2>/dev/null` ; do
        if test -f "$i/unix/tclConfig.sh" ; then
            ac_cv_c_tclconfig=`(cd $i/unix; pwd)`
            break
        fi
        done
    fi

    # check in a few common install locations
    if test x"${ac_cv_c_tclconfig}" = x ; then
        for i in `ls -d ${prefix}/lib 2>/dev/null` \
            `ls -d /usr/local/lib 2>/dev/null` ; do
        if test -f "$i/tclConfig.sh" ; then
            ac_cv_c_tclconfig=`(cd $i; pwd)`
            break
        fi
        done
    fi

    # check in a few other private locations
    if test x"${ac_cv_c_tclconfig}" = x ; then
        for i in \
            ${srcdir}/../tcl \
            `ls -dr ${srcdir}/../tcl[[8-9]].[[0-9]]* 2>/dev/null` ; do
        if test -f "$i/unix/tclConfig.sh" ; then
        ac_cv_c_tclconfig=`(cd $i/unix; pwd)`
        break
        fi
        done
    fi
])

if test x"${ac_cv_c_tclconfig}" = x ; then
    TCL_BIN_DIR="# no Tcl configs found"
    if test x"${with_tclconfig}" != x ; then
        AC_MSG_WARN(Can't find Tcl configuration definitions)
	exit 0
    fi
    AC_MSG_RESULT(not found)
else
    TCL_BIN_DIR=${ac_cv_c_tclconfig}
    AC_MSG_RESULT(found $TCL_BIN_DIR/tclConfig.sh)
    MK_TARGETS="$MK_TARGETS tcl"
    MK_INSTALL="$MK_INSTALL install-tcl"
fi

# Checks for programs.
AC_PROG_CXX
AC_PROG_INSTALL

# Libtool support
AC_LIBTOOL_WIN32_DLL
AM_PROG_LIBTOOL

# Checks for libraries.

# Checks for header files.
AC_HEADER_STDC

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_CHECK_SIZEOF(long,4)

# from Python...
AC_MSG_CHECKING(for long long support)
have_long_long=no
AC_TRY_COMPILE([], [long long x; x = (long long)0;], AC_DEFINE(HAVE_LONG_LONG) have_long_long=yes)
AC_MSG_RESULT($have_long_long)

# Checks for library functions.
AC_CHECK_FUNCS(mmap memmove bcopy)

AC_SUBST(MK_TARGETS)
AC_SUBST(MK_INSTALL)
AC_SUBST(TCL_BIN_DIR)

AC_OUTPUT(Makefile)
